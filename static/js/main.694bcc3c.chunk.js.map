{"version":3,"sources":["components/views/Days.js","components/views/Loader.js","components/Firebase.js","components/views/Content.js","components/views/Times.js","components/views/Banner.js","components/Table.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Days","daysTable","map","day","idx","background","today","Date","getDay","tomorrow","key","className","Loader","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Content","props","changeContent","i","e","contentStatus","state","target","value","setState","updateContent","preventDefault","uid","email","prompt","password","auth","signInWithEmailAndPassword","then","user","console","log","editStatus","updateDatabase","catch","err","type","content","contents","ids","csedRef","doc","update","toggleStatus","getAll","element","onSubmit","autoFocus","onChange","onDoubleClick","push","j","k","this","onAuthStateChanged","contentTable","Array","fill","ele","Component","Times","timesView","time","finTimes","Banner","title","Table","data","Home","getUniqueID","d","getTime","performance","now","replace","c","r","Math","random","floor","toString","firestore","collection","orderBy","onSnapshot","querySnapshot","forEach","id","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.694bcc3c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Days = () => {\r\n\r\n    const days = [\"Saturday\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\"]\r\n\r\n    const daysTable = days.map((day, idx) => {\r\n        let background = \"\";\r\n        let today = new Date().getDay() + 1;\r\n        if (today === 7) {\r\n            today = 0;\r\n        }\r\n        let tomorrow = today + 1;\r\n        if (tomorrow === 7) {\r\n            tomorrow = 0;\r\n        }\r\n        if (idx === today) {\r\n            background = \" blue-background white-text\";\r\n        }\r\n        if (idx === tomorrow) {\r\n            background = \" blue-background-3 white-text\";\r\n        }\r\n        if (idx === 5) {\r\n            background = \" green-background white-text\";\r\n        }\r\n        return (\r\n            <div key={idx} className={\"day flex-column justify align box-shadow black-text\" + background}>\r\n                <span className=\"medium forte bold\">{day}</span>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"days flex-column justify align\">\r\n            {daysTable}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Days;","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader-container content-name\">\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyC2dlvi3KAsN9tj88G0EvIxHWSn-AnEQvM\",\r\n    authDomain: \"schedule-17b2e.firebaseapp.com\",\r\n    databaseURL: \"https://schedule-17b2e.firebaseio.com\",\r\n    projectId: \"schedule-17b2e\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"770227791030\",\r\n    appId: \"1:770227791030:web:b23035e32f0cac11e5b217\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component } from 'react';\r\nimport Loader from './Loader';\r\nimport firebase from '../Firebase';\r\n\r\nclass Content extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editStatus: null,\r\n            contentStatus: null,\r\n            uid: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let editStatus = [];\r\n        let contentStatus = [];\r\n        for (let i = 0; i < 6; i++) {\r\n            editStatus.push([]);\r\n            contentStatus.push([]);\r\n            for (let j = 0; j < 3; j++) {\r\n                editStatus[i].push([]);\r\n                contentStatus[i].push([]);\r\n                for (let k = 0; k < 6; k++) {\r\n                    editStatus[i][j].push(false);\r\n                    contentStatus[i][j].push(\"\");\r\n                }\r\n            }\r\n        }\r\n        this.setState({editStatus, contentStatus});\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            this.setState({uid: user.uid});\r\n        })\r\n    }\r\n\r\n    changeContent = (day, i, idx, e) => {\r\n        let contentStatus = [...this.state.contentStatus];\r\n        contentStatus[day][i][idx] = e.target.value;\r\n        this.setState({contentStatus});\r\n    }\r\n\r\n    updateContent = (day, i, idx, e) => {\r\n        e.preventDefault();\r\n        if (this.state.uid === null) {\r\n            let email = prompt(\"Enter your email\");\r\n            let password = prompt(\"Enter your password\");\r\n            firebase.auth().signInWithEmailAndPassword(email, password)\r\n                .then((user) => {\r\n                    console.log(user);\r\n                    let editStatus = [...this.state.editStatus];\r\n                    editStatus[day][i][idx] = false;\r\n                    console.log(this.state.contentStatus[day][i][idx]);\r\n                    this.setState({editStatus});\r\n                    this.updateDatabase(day, i, idx);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        } else {\r\n            let editStatus = [...this.state.editStatus];\r\n            editStatus[day][i][idx] = false;\r\n            console.log(this.state.contentStatus[day][i][idx]);\r\n            this.setState({editStatus});\r\n            this.updateDatabase(day, i, idx);\r\n        }\r\n    }\r\n\r\n    updateDatabase = (day, i, idx) => {\r\n        let type = \"\";\r\n        switch (i) {\r\n            case 0:\r\n                type = \"name\";\r\n                break;\r\n            case 1:\r\n                type = \"instructor\";\r\n                break;\r\n            case 2:\r\n                type = \"type\";\r\n                break;\r\n            default:\r\n        }\r\n        let content = [...this.props.contents[day]];\r\n        content[idx][type] = this.state.contentStatus[day][i][idx];\r\n        console.log(content[idx][type], this.props.ids[day]);\r\n        console.log(content, this.props.contents);\r\n        this.props.csedRef.doc(this.props.ids[day]).update({\r\n            content: content,\r\n        })\r\n    }\r\n    \r\n    toggleStatus = (day, i, idx) => {\r\n        let type = \"\";\r\n        switch (i) {\r\n            case 0:\r\n                type = \"name\";\r\n                break;\r\n            case 1:\r\n                type = \"instructor\";\r\n                break;\r\n            case 2:\r\n                type = \"type\";\r\n                break;\r\n            default:\r\n        }\r\n        console.log(\"toggle\");\r\n        let editStatus = [...this.state.editStatus];\r\n        let contentStatus = [...this.state.contentStatus];\r\n        editStatus[day][i][idx] = true;\r\n        contentStatus[day][i][idx] = this.props.contents[day][idx][type];\r\n        this.setState({editStatus, contentStatus});\r\n    }\r\n    \r\n    getAll = (day, i, content, type) => {\r\n        return content.map((element, idx) => {\r\n            if (this.state.editStatus[day][i][idx] === true) {\r\n                return (\r\n                    <form key={idx} className=\"input divide small berlin\" onSubmit={(e) => this.updateContent(day, i, idx, e)}>\r\n                        <input className=\"divide small berlin\" autoFocus value={this.state.contentStatus[day][i][idx]} onChange={(e) => this.changeContent(day, i, idx, e)} />\r\n                    </form>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div key={idx} className=\"divide small berlin\" onDoubleClick={() => this.toggleStatus(day, i, idx)}>{element[type]}</div>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const contentTable = this.props.contents ? (\r\n            this.props.contents.map((content, day) => {\r\n                let background = \"\";\r\n                let today = new Date().getDay() + 1;\r\n                if (today === 7) {\r\n                    today = 0;\r\n                }\r\n                let tomorrow = today + 1;\r\n                if (tomorrow === 7) {\r\n                    tomorrow = 0;\r\n                }\r\n                if (day === today) {\r\n                    background = \" blue-background-2 white-text\";\r\n                }\r\n                if (day === tomorrow) {\r\n                    background = \" blue-background-4 white-text\";\r\n                }\r\n                if (day === 5) {\r\n                    background = \" green-background-2 white-text\";\r\n                }\r\n                return (\r\n                    <div key={day} className=\"flex-row justify align\">\r\n                        <div className={\"content-name flex-column justify align box-shadow black-text\" + background}>\r\n                            {this.getAll(day, 0, content, \"name\")}\r\n                        </div>\r\n                        <div className={\"content-instructor flex-column justify align box-shadow black-text\" + background}>\r\n                            {this.getAll(day, 1, content, \"instructor\")}\r\n                        </div>\r\n                        <div className={\"content-type flex-column justify align box-shadow black-text\" + background}>\r\n                            {this.getAll(day, 2, content, \"type\")}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        ) : (\r\n            new Array(6).fill(0).map((ele, idx) => {\r\n                return (\r\n                    <div key={idx} className=\"flex-row justify align\">\r\n                        <div className={\"content-name flex-column justify align box-shadow black-text\"}>\r\n                            <Loader />\r\n                        </div>\r\n                        <div className={\"content-instructor flex-column justify align box-shadow black-text\"}>\r\n                            <Loader />\r\n                        </div>\r\n                        <div className={\"content-type flex-column justify align box-shadow black-text\"}>\r\n                            <Loader />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n\r\n        return (\r\n            <div className=\"contents flex-column justify align\">\r\n                {contentTable}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\n\r\nconst Times = () => {\r\n    const times = [\"8:30 ~ 10:10\", \"10:20 ~ 12:00\", \"12:10 ~ 1:50\", \"2:00 ~ 3:40\", \"3:50 ~ 5:30\", \"5:40 ~ 7:20\"]\r\n    const timesView = times.map((time, idx) => {\r\n        return (\r\n            <div key={idx} className=\"divide small berlin\">{time}</div>\r\n        )\r\n    })\r\n    const finTimes = timesView.map((time, idx) => {\r\n        let background = \"\";\r\n        let today = new Date().getDay() + 1;\r\n        if (today === 7) {\r\n            today = 0;\r\n        }\r\n        let tomorrow = today + 1;\r\n        if (tomorrow === 7) {\r\n            tomorrow = 0;\r\n        }\r\n        if (idx === today) {\r\n            background = \" blue-background-2 white-text\";\r\n        }\r\n        if (idx === tomorrow) {\r\n            background = \" blue-background-4 white-text\";\r\n        }\r\n        if (idx === 5) {\r\n            background = \" green-background-2 white-text\";\r\n        }\r\n        return (\r\n            <div key={idx} className={\"time flex-column justify align box-shadow black-text\" + background}>\r\n                {timesView}\r\n            </div>\r\n        );\r\n    })\r\n    return (\r\n        <div className=\"contents flex-column justify align\">\r\n            {finTimes}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Times;","import React from 'react';\r\n\r\nconst Banner = ({title, className}) => {\r\n    return (\r\n        <div className={\"flex-row justify align banner box-shadow white-text small berlin \" + className}>\r\n            {title}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner;","import React, { Component } from 'react';\r\nimport Days from './views/Days';\r\nimport Content from './views/Content';\r\nimport Times from './views/Times';\r\nimport Banner from './views/Banner';\r\n\r\nclass Table extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            day: new Date().getDay()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"flex-column justify align\">\r\n                <div className=\"flex-row justify align\">\r\n                    <Banner title=\"Day\" className=\"day orange-background\"/>\r\n                    <Banner title=\"Time\" className=\"time orange-background-2\"/>\r\n                    <Banner title=\"Subject\" className=\"content-name orange-background-2\"/>\r\n                    <Banner title=\"Instructor\" className=\"content-instructor orange-background-2\"/>\r\n                    <Banner title=\"Type\" className=\"content-type orange-background-2\"/>\r\n                </div>\r\n                <div className=\"table flex-row justify align\">\r\n                    <Days />\r\n                    <Times />\r\n                    <Content contents={this.props.data} ids={this.props.ids} csedRef={this.props.csedRef} />\r\n                </div>\r\n            </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default Table;","import React, { Component } from 'react';\r\nimport Table from './Table';\r\nimport firebase from './Firebase';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    getUniqueID = () => {\r\n        var d = new Date().getTime();\r\n        if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\r\n            d += performance.now(); //use high-precision timer if available\r\n        }\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = (d + Math.random() * 16) % 16 | 0;\r\n            d = Math.floor(d / 16);\r\n            // eslint-disable-next-line no-mixed-operators\r\n            return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const db = firebase.firestore();\r\n        let csedRef = db.collection('CSED21');\r\n        // this was for writing the whole table from here to the firestore\r\n        /*for (let i = 0; i < this.state.data.length; i++) {\r\n            let uid = this.getUniqueID()\r\n            csedRef.doc(uid).set({\r\n                day: i,\r\n                content: this.state.data[i],\r\n            })\r\n        }*/\r\n\r\n        csedRef.orderBy(\"day\", \"asc\").onSnapshot(querySnapshot => {\r\n            let data = [];\r\n            let ids = [];\r\n            querySnapshot.forEach(doc => {\r\n                data[doc.data().day] = doc.data().content;\r\n                ids[doc.data().day] = doc.id;\r\n            })\r\n            this.setState({data, ids, csedRef});\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"home flex-column justify align\">\r\n                <Table data={this.state.data} ids={this.state.ids} csedRef={this.state.csedRef} />\r\n            </div>            \r\n        );\r\n    }\r\n}\r\n \r\nexport default Home;","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Home from './components/Home';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n\n    }\n  }\n  render() { \n    return ( \n      <div>\n        <BrowserRouter>\n          <Route exact path='/Schedule/' component={Home} />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport './Loader.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n//ReactDOM.render(<div className=\"title-container\"><span className=\"box-shadow title\">CSED 21 SCHEDULE</span></div>, document.getElementById('title'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}